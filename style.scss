$gray-500: #343a40;

body{
  background-color: $gray-500;
}

::-webkit-scrollbar{
  display: none;
}

a{
    text-decoration: none;
    color: inherit;
}

  
  /*
   * Animated CSS button
   */

  $openSans: 'Open Sans', Helvetica, Arial, sans-serif;
  
  $cyan: #ff0000;
  $dark: #FFFFFF;
  $borderW: 4px;
  
  .blob-btn {
    $numOfBlobs: 4;
    z-index: 1;
    position: relative;
    padding: 10px 10px;
    // margin-bottom: 30px;
    text-align: center;
    text-transform: uppercase;
    color: $cyan;
    font-size: 16px;
    font-weight: bold;
    background-color: transparent;
    outline: none;
    border: none;
    transition: color 0.5s;
    cursor: pointer;
    border-radius:100%;
    
    &:before {
      content: "";
      z-index: 1;
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      border: $borderW solid $cyan;
      border-radius:100%;
    }
    
    &:after {
      content: "";
      z-index: -2;
      position: absolute;
      left: $borderW*1.2;
      top: $borderW*1.2;
      width: 100%;
      height: 100%;
  
      transition: all 0.3s 0.2s;
      border-radius:100%;
    }
    
    &:hover {
      color: $dark;
      border-radius:100%;
      
      &:after {
        transition: all 0.3s;
        left: 0;
        top: 0;
        border-radius:100%;
      }
    }
    
    &__inner {
      z-index: -1;
      overflow: hidden;
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      border-radius:100%;
      background:#ffffff;
    }
    
    // additional container created, because in FF blobs are breaking overflow:hidden of element with svg gooey filter
    &__blobs {
      position: relative;
      display: block;
      height: 100%;
      filter: url('#goo');
    }
    
    &__blob {
      position: absolute;
      top: $borderW;
      width: 100% / $numOfBlobs;
      height: 100%;
      background: $cyan;
      border-radius: 100%;
      transform: translate3d(0,150%,0) scale(1.7);
      transition: transform 0.45s;
      
      @supports(filter: url('#goo')) {
        transform: translate3d(0,150%,0) scale(1.4);
      }
      
      @for $i from 1 through $numOfBlobs {
        &:nth-child(#{$i}) {
          left: ($i - 1) * (120% / $numOfBlobs);
          transition-delay: ($i - 1) * 0.08s;
        }
      }
      
      .blob-btn:hover & {
        transform: translateZ(0) scale(1.7);
        
        @supports(filter: url('#goo')) {
          transform: translateZ(0) scale(1.4);
        }
      }
    }
    
  }
  
/*Animated CSS button ends*/

/*Menu button image*/
#menu
{
    height: 50px;
    width: 50px;
    border-radius: 100%;
}

/*Menu button image ends*/


/*Timeline starts*/
$numDots: 10;
$parentWidthBase: 0.8;
$parentWidth: $parentWidthBase * 100vw;
$parentMaxWidth: 1000px;
$dotWidth: 35px;
$dotWidthSm: 27px;
$active: #2C3E50;
$inactive: #AEB6BF;


h1{
	text-align: center;
	height: 38px;
	margin: 60px 0;
    span{
        white-space: nowrap;
    }
}
.flex-parent{
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	width: 100%;
	height: 100%;
}
.input-flex-container
{
	display: flex;
	justify-content: space-around;
	align-items: center;
	width: $parentWidth;
	height: 100px;
	max-width: $parentMaxWidth;
	position: relative;
	z-index: 0;
}
.input
{
	width: $dotWidth;
	height: $dotWidth;
	background-color: $active;
	position: relative;
	border-radius: 50%;
	&:hover{
		cursor: pointer;
    }
	&::before, &::after{
		content: '';
		display: block;
		position: absolute;
		z-index: -1;
		top: 50%;
		transform: translateY(-50%);
		background-color: $active;
		width: $parentWidth / $numDots;
		height: 5px;
		max-width: $parentMaxWidth / $numDots;
    }
	&::before{
		left: calc(#{-$parentWidth / $numDots} + #{$dotWidth / 2});
    }
	&::after{
		right: calc(#{-$parentWidth / $numDots} + #{$dotWidth / 2});
    }
	&.active
    {
		background-color: $active;
		&::before{
			background-color: $active;
        }
		&::after{
			background-color: $inactive;
        }
		span{
			font-weight: 700;

			&::before{
				font-size: 13px;
            }
			&::after{
				font-size: 20px;
            }
        }
    }
	&.active ~ .input{
		&, &::before, &::after{
			background-color: $inactive;
        }
    }

	span{
		width: 1px;
		height: 1px;
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		visibility: hidden;
		&::before, &::after{
			visibility: visible;
			position: absolute;
			left: 50%;
        }
		&::after{
			content: attr(data-year);
			top: 25px;
			transform: translateX(-50%);
			font-size: 18px;
            text-align: center;
        }
		&::before{
			content: attr(data-info);
			top: -65px;
			width: 70px;
			transform: translateX(-5px) rotateZ(-45deg);
			font-size: 18px;
			text-indent: -10px;
        }
    }
}
.description-flex-container{
	width: $parentWidth;
	font-weight: 400;
	font-size: 22px;
	margin-top: 100px;
	max-width: $parentMaxWidth;
	p{
		margin-top: 0;
		display: none;
		&.active{
			display: block;
        }
    }
}

@media (min-width: $parentMaxWidth / $parentWidthBase)
{
	.input::before
    {
		left: #{-($parentMaxWidth / $numDots) + ($dotWidth / 2)}
    }
	.input::after
    {
		right: #{-($parentMaxWidth / $numDots) + ($dotWidth / 2)}
    }
}
@media (max-width: 850px)
{
	.input
    {
		width: $dotWidthSm;
		height: $dotWidthSm;
		&::before, &::after{
			height: 3px;
        }
		&::before{
			left: calc(#{-$parentWidth / $numDots} + #{$dotWidthSm / 2});
        }
		&::after{
			right: calc(#{-$parentWidth / $numDots} + #{$dotWidthSm / 2});
        }
    }
}
		

/*Timeline ends*/

/*Introduction starts*/
#intro_content
{
  position: relative;
  top: -150px;
  left: -50px;
  height: 120%;
  width: 120%;
  border-radius: 50% 75%;
}

#intro_head{
  position: relative;
  top: -50px;
  left: -50px;
  margin: 0;
}

#p1{
  position: relative;
  top: -10px;
  padding-left: 40px;
  padding-right: 100px;
}

#p2{
  position: relative;
  top: -10px;
  padding-left: 60px;
  padding-right: 80px;
}

#p3{
  position: relative;
  top: -10px;
  padding-left: 100px;
  padding-right: 85px;
}

/*Introduction ends*/